{"ast":null,"code":"import React, { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport About from \"./pages/About\";\nimport Home from \"./pages/Home\";\nimport Contact from \"./pages/Contact\";\nimport Datails from \"./components/Datails\";\nimport Login from \"./pages/Login\";\nconst App = () => {\n\n  // if() {\n  //   return (\n  //     <>\n  //       <Router>\n  //         <Header/>\n  //         <Routes>\n  //           <Route path=\"/\" element={<Home />} />\n  //           <Route path=\"/about\" element={<About />} />\n  //           <Route path=\"/contact\" element={<Contact />} />\n  //           <Route path=\"/datails\" element={<Datails />} />\n  //         </Routes>\n  //       </Router>\n  //     </>\n  //   );  \n  // } else {\n  //   return(\n  //     <Login/>\n  //   )\n  // }\n};\n_c = App;\nexport default App;\n\n// в неочивидной && операции с boolean, если первая часть true, то выводится вторая часть\n// если первая часть false, то выводится первая часть\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Header","BrowserRouter","Router","Routes","Route","About","Home","Contact","Datails","Login","App","_c","$RefreshReg$"],"sources":["C:/Users/lenovo/OneDrive/Рабочий стол/films/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport About from \"./pages/About\";\nimport Home from \"./pages/Home\";\nimport Contact from \"./pages/Contact\";\nimport Datails from \"./components/Datails\";\nimport Login from \"./pages/Login\";\n\nconst App = () => {\n\n\n  // if() {\n  //   return (\n  //     <>\n  //       <Router>\n  //         <Header/>\n  //         <Routes>\n  //           <Route path=\"/\" element={<Home />} />\n  //           <Route path=\"/about\" element={<About />} />\n  //           <Route path=\"/contact\" element={<Contact />} />\n  //           <Route path=\"/datails\" element={<Datails />} />\n  //         </Routes>\n  //       </Router>\n  //     </>\n  //   );  \n  // } else {\n  //   return(\n  //     <Login/>\n  //   )\n  // }\n};\n\nexport default App;\n\n// в неочивидной && операции с boolean, если первая часть true, то выводится вторая часть\n// если первая часть false, то выводится первая часть\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AACzE,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,OAAO,MAAM,iBAAiB;AACrC,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,KAAK,MAAM,eAAe;AAEjC,MAAMC,GAAG,GAAGA,CAAA,KAAM;;EAGhB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAAA,CACD;AAACC,EAAA,GAtBID,GAAG;AAwBT,eAAeA,GAAG;;AAElB;AACA;AAAA,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}